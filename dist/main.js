/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const README_URL = 'https://raw.githubusercontent.com/emmabostian/developer-portfolios/master/README.md';\nconst SECTION_TITLE = '## A'; // Portfolio links only appear after '## A'\nconst REDIRECT_URL = 'https://github.com/emmabostian/developer-portfolios';\n\nconst initialize = async () => {\n  try {\n    const portfolioLinks = await fetchPortfolioLinks();\n    if (portfolioLinks.length > 0) {\n      await redirectToRandomLink(portfolioLinks);\n    } else {\n      console.warn('No portfolio links found.');\n    }\n\n    // Redirect back to github repo if no valid ptf link found after 5 seconds \n    setTimeout(() => {\n      console.log(`Redirecting to: ${REDIRECT_URL}`);\n      window.location.href = REDIRECT_URL;\n    }, 5000);\n  } catch (error) {\n    console.error('Error during initialization:', error);\n  }\n};\n\nconst fetchPortfolioLinks = async (url = README_URL, sectionTitle = SECTION_TITLE) => {\n  try {\n    const readmeText = await fetchReadme(url);\n    return extractLinksFromSection(readmeText, sectionTitle);\n  } catch (error) {\n    console.error('Failed to fetch portfolio links:', error);\n    return [];\n  }\n};\n\nconst fetchReadme = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch README: ${response.status} ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`Error fetching README from ${url}:`, error);\n    throw error;\n  }\n};\n\nconst extractLinksFromSection = (text, sectionTitle) => {\n  const sectionStartIndex = text.indexOf(sectionTitle);\n  if (sectionStartIndex === -1) {\n    console.warn(`Section \"${sectionTitle}\" not found in the README.`);\n    return [];\n  }\n\n  const section = text.slice(sectionStartIndex);\n  const urlPattern = /\\[.*?\\]\\((https?:\\/\\/[^\\)]+)\\)/g;\n  return [...section.matchAll(urlPattern)].map(match => match[1]);\n};\n\nconst redirectToRandomLink = async (linksArr) => {\n  if (!Array.isArray(linksArr) || linksArr.length === 0) {\n    console.warn('No links available to redirect.');\n    return;\n  }\n\n  const unsortedLinks = unsortArray(linksArr);\n\n  for (const link of unsortedLinks) {\n    const isValid = await checkLinkStatus(link);\n    if (isValid) {\n      console.log(`Redirecting to: ${link}`);\n      window.location.href = link;\n      return;\n    } else {\n      console.warn(`Invalid link: ${link}. Trying the next one.`);\n    }\n  }\n\n  console.error('No valid portfolio links found.');\n};\n\nconst checkLinkStatus = async (url) => {\n  try {\n    const response = await fetch(url, { method: 'HEAD' });\n    return response.ok;\n  } catch (error) {\n    console.error(`Error checking link status for ${url}:`, error);\n    return false;\n  }\n};\n\nconst unsortArray = (array) => {\n  const unsorted = [...array];\n  for (let i = unsorted.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [unsorted[i], unsorted[j]] = [unsorted[j], unsorted[i]];\n  }\n  return unsorted;\n};\n\nconst loadingAnimation = () => {\n  const redirectingText = document.querySelector(\"p\")\n  setInterval(() => {\n    changeLoadingText(redirectingText)\n  }, 450)\n}\n\nconst changeLoadingText = (element) => {\n  if (element.textContent === \"Redirecting...\") {\n    element.textContent = \"Redirecting\"\n  } else {\n    element.textContent += \".\"\n  }\n}\n\nwindow.addEventListener('load', () => {\n  loadingAnimation()\n  initialize()\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4QkFBOEI7QUFDOUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQ0FBcUMsYUFBYTtBQUNsRDtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGlCQUFpQixFQUFFLG9CQUFvQjtBQUN4RjtBQUNBO0FBQ0EsSUFBSTtBQUNKLGdEQUFnRCxJQUFJO0FBQ3BEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsYUFBYTtBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLEtBQUs7QUFDMUM7QUFDQTtBQUNBLE1BQU07QUFDTixvQ0FBb0MsS0FBSztBQUN6QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHdDQUF3QyxnQkFBZ0I7QUFDeEQ7QUFDQSxJQUFJO0FBQ0osb0RBQW9ELElBQUk7QUFDeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQ0FBb0MsT0FBTztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhbmRvbS1idXR0b24tcmVkaXJlY3Rvci8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJFQURNRV9VUkwgPSAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2VtbWFib3N0aWFuL2RldmVsb3Blci1wb3J0Zm9saW9zL21hc3Rlci9SRUFETUUubWQnO1xuY29uc3QgU0VDVElPTl9USVRMRSA9ICcjIyBBJzsgLy8gUG9ydGZvbGlvIGxpbmtzIG9ubHkgYXBwZWFyIGFmdGVyICcjIyBBJ1xuY29uc3QgUkVESVJFQ1RfVVJMID0gJ2h0dHBzOi8vZ2l0aHViLmNvbS9lbW1hYm9zdGlhbi9kZXZlbG9wZXItcG9ydGZvbGlvcyc7XG5cbmNvbnN0IGluaXRpYWxpemUgPSBhc3luYyAoKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcG9ydGZvbGlvTGlua3MgPSBhd2FpdCBmZXRjaFBvcnRmb2xpb0xpbmtzKCk7XG4gICAgaWYgKHBvcnRmb2xpb0xpbmtzLmxlbmd0aCA+IDApIHtcbiAgICAgIGF3YWl0IHJlZGlyZWN0VG9SYW5kb21MaW5rKHBvcnRmb2xpb0xpbmtzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS53YXJuKCdObyBwb3J0Zm9saW8gbGlua3MgZm91bmQuJyk7XG4gICAgfVxuXG4gICAgLy8gUmVkaXJlY3QgYmFjayB0byBnaXRodWIgcmVwbyBpZiBubyB2YWxpZCBwdGYgbGluayBmb3VuZCBhZnRlciA1IHNlY29uZHMgXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgUmVkaXJlY3RpbmcgdG86ICR7UkVESVJFQ1RfVVJMfWApO1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBSRURJUkVDVF9VUkw7XG4gICAgfSwgNTAwMCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZHVyaW5nIGluaXRpYWxpemF0aW9uOicsIGVycm9yKTtcbiAgfVxufTtcblxuY29uc3QgZmV0Y2hQb3J0Zm9saW9MaW5rcyA9IGFzeW5jICh1cmwgPSBSRUFETUVfVVJMLCBzZWN0aW9uVGl0bGUgPSBTRUNUSU9OX1RJVExFKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVhZG1lVGV4dCA9IGF3YWl0IGZldGNoUmVhZG1lKHVybCk7XG4gICAgcmV0dXJuIGV4dHJhY3RMaW5rc0Zyb21TZWN0aW9uKHJlYWRtZVRleHQsIHNlY3Rpb25UaXRsZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIHBvcnRmb2xpbyBsaW5rczonLCBlcnJvcik7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59O1xuXG5jb25zdCBmZXRjaFJlYWRtZSA9IGFzeW5jICh1cmwpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggUkVBRE1FOiAke3Jlc3BvbnNlLnN0YXR1c30gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGZldGNoaW5nIFJFQURNRSBmcm9tICR7dXJsfTpgLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmNvbnN0IGV4dHJhY3RMaW5rc0Zyb21TZWN0aW9uID0gKHRleHQsIHNlY3Rpb25UaXRsZSkgPT4ge1xuICBjb25zdCBzZWN0aW9uU3RhcnRJbmRleCA9IHRleHQuaW5kZXhPZihzZWN0aW9uVGl0bGUpO1xuICBpZiAoc2VjdGlvblN0YXJ0SW5kZXggPT09IC0xKSB7XG4gICAgY29uc29sZS53YXJuKGBTZWN0aW9uIFwiJHtzZWN0aW9uVGl0bGV9XCIgbm90IGZvdW5kIGluIHRoZSBSRUFETUUuYCk7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc3Qgc2VjdGlvbiA9IHRleHQuc2xpY2Uoc2VjdGlvblN0YXJ0SW5kZXgpO1xuICBjb25zdCB1cmxQYXR0ZXJuID0gL1xcWy4qP1xcXVxcKChodHRwcz86XFwvXFwvW15cXCldKylcXCkvZztcbiAgcmV0dXJuIFsuLi5zZWN0aW9uLm1hdGNoQWxsKHVybFBhdHRlcm4pXS5tYXAobWF0Y2ggPT4gbWF0Y2hbMV0pO1xufTtcblxuY29uc3QgcmVkaXJlY3RUb1JhbmRvbUxpbmsgPSBhc3luYyAobGlua3NBcnIpID0+IHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGxpbmtzQXJyKSB8fCBsaW5rc0Fyci5sZW5ndGggPT09IDApIHtcbiAgICBjb25zb2xlLndhcm4oJ05vIGxpbmtzIGF2YWlsYWJsZSB0byByZWRpcmVjdC4nKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCB1bnNvcnRlZExpbmtzID0gdW5zb3J0QXJyYXkobGlua3NBcnIpO1xuXG4gIGZvciAoY29uc3QgbGluayBvZiB1bnNvcnRlZExpbmtzKSB7XG4gICAgY29uc3QgaXNWYWxpZCA9IGF3YWl0IGNoZWNrTGlua1N0YXR1cyhsaW5rKTtcbiAgICBpZiAoaXNWYWxpZCkge1xuICAgICAgY29uc29sZS5sb2coYFJlZGlyZWN0aW5nIHRvOiAke2xpbmt9YCk7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGxpbms7XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUud2FybihgSW52YWxpZCBsaW5rOiAke2xpbmt9LiBUcnlpbmcgdGhlIG5leHQgb25lLmApO1xuICAgIH1cbiAgfVxuXG4gIGNvbnNvbGUuZXJyb3IoJ05vIHZhbGlkIHBvcnRmb2xpbyBsaW5rcyBmb3VuZC4nKTtcbn07XG5cbmNvbnN0IGNoZWNrTGlua1N0YXR1cyA9IGFzeW5jICh1cmwpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgeyBtZXRob2Q6ICdIRUFEJyB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2Uub2s7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihgRXJyb3IgY2hlY2tpbmcgbGluayBzdGF0dXMgZm9yICR7dXJsfTpgLCBlcnJvcik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG5jb25zdCB1bnNvcnRBcnJheSA9IChhcnJheSkgPT4ge1xuICBjb25zdCB1bnNvcnRlZCA9IFsuLi5hcnJheV07XG4gIGZvciAobGV0IGkgPSB1bnNvcnRlZC5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XG4gICAgY29uc3QgaiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChpICsgMSkpO1xuICAgIFt1bnNvcnRlZFtpXSwgdW5zb3J0ZWRbal1dID0gW3Vuc29ydGVkW2pdLCB1bnNvcnRlZFtpXV07XG4gIH1cbiAgcmV0dXJuIHVuc29ydGVkO1xufTtcblxuY29uc3QgbG9hZGluZ0FuaW1hdGlvbiA9ICgpID0+IHtcbiAgY29uc3QgcmVkaXJlY3RpbmdUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInBcIilcbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGNoYW5nZUxvYWRpbmdUZXh0KHJlZGlyZWN0aW5nVGV4dClcbiAgfSwgNDUwKVxufVxuXG5jb25zdCBjaGFuZ2VMb2FkaW5nVGV4dCA9IChlbGVtZW50KSA9PiB7XG4gIGlmIChlbGVtZW50LnRleHRDb250ZW50ID09PSBcIlJlZGlyZWN0aW5nLi4uXCIpIHtcbiAgICBlbGVtZW50LnRleHRDb250ZW50ID0gXCJSZWRpcmVjdGluZ1wiXG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudC50ZXh0Q29udGVudCArPSBcIi5cIlxuICB9XG59XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICBsb2FkaW5nQW5pbWF0aW9uKClcbiAgaW5pdGlhbGl6ZSgpXG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;